package views

import (
"github.com/salvaft/go-link-shortener/persistance"

"github.com/salvaft/go-link-shortener/components"
)

templ Home(addLink bool, csrf string, link *persistance.Link) {
@Base(true)
<main class="flex flex-col gap-8 max-w-xl mx-auto">
    <header>
        <h1 class="text-teal-300">Home</h1>
    </header>
    <section>
        <form class="max-w-md mx-auto" action="/" method="post">
            <div class="relative z-0 w-full mb-5 group">
                <input type="text" name="url" id="url"
                    class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer"
                    placeholder=" " required />
                <label for="url"
                    class="peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6">
                    Enter
                    URL
                </label>
                <input type="hidden" name="csrfToken" value={ csrf } />
            </div>
            <button type="submit"
                class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Submit</button>
        </form>
    </section>
    <section id="recent">
        <h2 class="text-4xl text-teal-400 mb-4">Recent URLs</h2>
        <dl class="max-w-md text-gray-900 divide-y divide-gray-200 dark:text-white dark:divide-gray-700">
            if addLink {
            @components.LinkEntry(link)
            }
        </dl>
    </section>
</main>
<script>


    function createLink(link) {

        const a = document.createElement("a")
        const dt = document.createElement("dt")
        const dd = document.createElement("dd")
        a.classList.add("flex", "flex-col", "pb-3")
        dt.classList.add("mb-1", "text-gray-500", "md:text-lg", "dark:text-gray-400")
        dd.classList.add("text-lg", "font-semibold")
        a.href = link.href
        dd.textContent = link.url
        dt.textContent = link.href
        a.appendChild(dd)
        a.appendChild(dt)
        return a
    }
    const list = document.querySelector("#recent dl")
    const existingLinks = JSON.parse(localStorage.getItem("links")) || []
    existingLinks.forEach(link => {
        list.appendChild(createLink(link))
    })

    const form = document.querySelector("form")
    form.addEventListener("submit", async (e) => {
        e.preventDefault()
        if (existingLinks.some(link => {
            return link.href === form.url.value

        })) {

            form.reset()
            // TODO: Show toaster with existing link 
            return
        }
        const data = new FormData(form)
        //TODO: Handle errors and error responses
        const response = await fetch("/", {
            method: "POST",
            body: data,
            headers: {
                "X-From-Js": "true"
            }
        })
        const link = await response.json()
        existingLinks.push(link)
        localStorage.setItem("links", JSON.stringify(existingLinks))

        list.appendChild(createLink(link))
        form.reset()
    })

</script>
}
